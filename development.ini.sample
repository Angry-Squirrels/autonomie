[app:autonomie]
use = egg:autonomie

pyramid.reload_templates = true
pyramid.reload_assets = true
pyramid.reload_all = true
pyramid.debug_authorization = false
pyramid.debug_notfound = true
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = fr
pyramid.includes =   pyramid_tm
                    deform_bootstrap

####  MAIL FROM WITHIN THE APPLICATION ####
# Add this one to pyramid.includes if you configured a mailbox
#pyramid_mailer

# Mail configuration
# Host and port are set to localhost/25 by default
#mail.host = smtp.gmail.com
#mail.port=587
#mail.username=mygmailaccount@gmail.com
#mail.password=mygmailpasswd
#mail.tls=True
#mail.default_sender=default_sender@sender.com

#### DATABASE ACCESS CONFIGURATION ####
sqlalchemy.url = mysql://egw:egw@localhost/egw?charset=utf8
sqlalchemy.echo=False
sqlalchemy.encoding=UTF8
# Those variables should be improved to fit your configuration
sqlalchemy.pool_recycle=7200
sqlalchemy.pool_size=100

#### MAKO SPECIFIC CONFIGURATION ####
mako.directories = autonomie:templates
mako.imports = from markupsafe import escape_silent
mako.default_filters = escape_silent
mako.module_directory = %(here)s/mako_compiled_templates

#### BEAKER SESSION AND CACHE CONFIGURATION ####
session.type=file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.cookie_on_exception = true
session.auto=True
session.secret=mysecretpassphraseforsessionencoding
session.timeout=3600
cache.regions = default_term, second, short_term, long_term
cache.type = memory
cache.second.expire = 1
cache.short_term.expire = 60
cache.default_term.expire = 300
cache.long_term.expire = 20

[pipeline:main]
pipeline =
    translogger
    autonomie

#### LOGGING CONFIGURATION ####
[filter:translogger]
use = egg:paste#translogger
setup_console_handler = False

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8080

# Begin logging configuration
[loggers]
keys = root, autonomie, sqlalchemy

[handlers]
keys = console, file, sqlfile

[formatters]
keys = generic

[logger_root]
level = ERROR
handlers = console, file

[logger_autonomie]
level = DEBUG
handlers = console, file
qualname = autonomie

[logger_sqlalchemy]
level = INFO
#level = DEBUG
#level = INFO
handlers = sqlfile
qualname = sqlalchemy.engine
propagate = 0
# level = INFO logs SQL queries.
# level = DEBUG logs SQL queries and results.
# level = WARN logs neither. (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_file]
class = FileHandler
args = ('%(here)s/logfile.log','a')
level = DEBUG
formatter = generic

[handler_sqlfile]
class = FileHandler
args = ('%(here)s/sql.log','a')
level = DEBUG
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
#Alembic conf
[alembic]
script_location = alembic
# file_template = %%(rev)s_%%(slug)s
