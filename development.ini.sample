[app:autonomie]
use = egg:autonomie

pyramid.reload_templates = true
pyramid.reload_assets = true
pyramid.reload_all = true
pyramid.debug_authorization = false
pyramid.debug_notfound = true
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = fr
pyramid.includes =   pyramid_tm
                    deform_bootstrap
                    js.deform_bootstrap
                    pyramid_mailer
                    pyramid_layout
                    pyramid_mako
                    pyramid_chameleon
####  MAIL FROM WITHIN THE APPLICATION ####
# Add this one to pyramid.includes if you configured a mailbox
#pyramid_mailer

# Mail configuration
# Host and port are set to localhost/25 by default
#mail.host = smtp.gmail.com
#mail.port=587
#mail.username=mygmailaccount@gmail.com
#mail.password=mygmailpasswd
#mail.tls=True
#mail.default_sender=default_sender@sender.com
### Optout address for unsubscription (for local smtp purpose)
#mail.optout_address=unsubcribe@mail.com
## Bounce_url address (should indicate a server redirecting a query to the url passed in the url GET param)
#mail.bounce_url=bounce_server.com

#### DATABASE ACCESS CONFIGURATION ####
sqlalchemy.url = mysql://autonomie:autonomie@localhost/autonomie?charset=utf8
sqlalchemy.echo=False
sqlalchemy.encoding=UTF8
# Those variables should be improved to fit your configuration
sqlalchemy.pool_recycle=7200
sqlalchemy.pool_size=100

#### MAKO SPECIFIC CONFIGURATION ####
mako.directories = autonomie:templates
mako.imports = from markupsafe import escape_silent
mako.default_filters = escape_silent
mako.module_directory = %(here)s/mako_compiled_templates

#### BEAKER SESSION AND CACHE CONFIGURATION ####
session.type=file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.cookie_on_exception = true
session.auto=True
session.secret=mysecretpassphraseforsessionencoding
session.timeout=3600
session.longtimeout=64000
cache.regions = default_term, second, short_term, long_term
cache.type = memory
cache.second.expire = 1
cache.short_term.expire = 60
cache.default_term.expire = 300
cache.long_term.expire = 20

# static file path (may be an url, allowing to have static datas on different servers)
autonomie.static=static
# Assets (logo ...) storage path
autonomie.assets=/tmp/
# treasury related docs upload
autonomie.ftpdir=/home/gas/Developpement/git/autonomie/autonomie/filesystem
# Max filesize for file attachment (in Bytes)
autonomie.maxfilesize=2000000
# The instance name
autonomie.instance_name=intranet.local.fr

# Tempdir for file upload (should exist)
pyramid_deform.tempdir=/tmp/tempdir

[filter:fanstatic]
use = egg:fanstatic#fanstatic
bundle=True
minified=True

[pipeline:main]
pipeline =
    fanstatic
    autonomie

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8080

# Begin logging configuration
[loggers]
keys = root, sql, alembic

[handlers]
keys = console, file, sql

[formatters]
keys = full, light

[logger_root]
level = ERROR
handlers = console, file

[logger_sql]
level = INFO
#level = DEBUG
#level = INFO
handlers = sql
qualname = sqlalchemy.engine
propagate = 0
# level = INFO logs SQL queries.
# level = DEBUG logs SQL queries and results.
# level = WARN logs neither. (Recommended for production systems.)

[logger_alembic]
level = DEBUG
handlers = sql
qualname = alembic
propagate=0

[handler_console]
class = autonomie.log.CustomStreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = full

[handler_file]
class = autonomie.log.CustomFileHandler
args = ('%(here)s/logfile.log','a')
level = DEBUG
formatter = full

[handler_sql]
class = FileHandler
args = ('%(here)s/sql.log','a')
level = DEBUG
formatter = light

[formatter_light]
format = %(message)s

[formatter_full]
format =  %(ip)s - %(asctime)-15s %(levelname)-5.5s USER : %(user)-8s %(message)s ([%(name)s])

# End logging configuration
#Alembic conf
[alembic]
script_location = autonomie:alembic
file_template = %%(slug)s_%%(rev)s
