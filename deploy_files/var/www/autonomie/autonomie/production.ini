[app:autonomie]
use = egg:autonomie

pyramid.reload_templates = false
pyramid.reload_assets = false
pyramid.reload_all = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = false
pyramid.default_locale_name = fr
pyramid.includes =   pyramid_tm
                    deform_bootstrap
                % if app.has_key('mail'):
                    pyramid_mailer
                % endif


sqlalchemy.url = mysql://autonomie:${app['db']['password']}@localhost/autonomie?charset=utf8
sqlalchemy.echo=False
sqlalchemy.encoding=UTF8
# Those variables should be improved
sqlalchemy.pool_recycle=7200
sqlalchemy.pool_size=100
mako.directories = autonomie:templates
mako.imports = from markupsafe import escape_silent
mako.default_filters = escape_silent
mako.module_directory = /var/cache/autonomie/mako
session.type=file
session.data_dir = /var/cache/autonomie/beaker/sessions/data
session.lock_dir = /var/cache/autonomie/beaker/sessions/lock
session.cookie_on_exception = true
session.auto=True
session.secret=${app['secret']}
session.timeout=3600
cache.regions = default_term, second, short_term, long_term
cache.type = memory
cache.second.expire = 1
cache.short_term.expire = 60
cache.default_term.expire = 300
cache.long_term.expire = 3600
% if app.has_key('mail'):
mail.host=${app['mail'].get('host', 'localhost')}
mail.port=${app['mail'].get('port', 25)}
    % if app['mail'].get('username'):
mail.username=${app['mail']['username']}
mail.password=${app['mail'].get('password', None)}
    % endif
    % if app.get('tls'):
mail.tls=${app['mail']['tls']}
    % endif
    % if app['mail'].get('default_sender'):
mail.default_sender=${app['mail']['default_sender']}
    % endif
% endif
autonomie.assets=/var/intranet_files/

[pipeline:main]
pipeline =
    translogger
    autonomie

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8080

# Begin logging configuration
[loggers]
keys = root, autonomie, sqlalchemy

[filter:translogger]
use = egg:paste#translogger
setup_console_handler = False

[handlers]
keys = file

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = file

[logger_autonomie]
level = INFO
handlers = file
qualname = autonomie

[logger_sqlalchemy]
level = WARN
handlers = file
qualname = sqlalchemy.engine
# level = INFO logs SQL queries.
# level = DEBUG logs SQL queries and results.
# level = WARN logs neither. (Recommended for production systems.)

[handler_file]
class = FileHandler
args = ('/var/log/autonomie/autonomie.log','a')
level = INFO
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
# End logging configuration
