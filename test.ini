[app:autonomie]
use = egg:autonomie

pyramid.reload_templates = true
pyramid.reload_assets = true
pyramid.reload_all = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = en
pyramid.includes =pyramid_tm

sqlalchemy.url = mysql://testautonomie:password@localhost/testautonomie?charset=utf8
sqlalchemy.echo=False
sqlalchemy.encoding=UTF8
mako.directories = autonomie:templates
mako.imports = from markupsafe import escape_silent
mako.default_filters = escape_silent
mako.module_directory = %(here)s/mako_compiled_templates
testdb.user=testautonomie
testdb.password=password
testdb.db=testautonomie
testdb.mysql_cmd=mysql -uroot
testdb.sampledb=sample_db/dbautonomie.sql
testdb.sampledatas=sample_db/testdatas.sql

[pipeline:main]
pipeline =
    autonomie

[server:main]
use = egg:waitress#main
host = 127.0.0.1
port = 8080

# Begin logging configuration

[loggers]
keys = root, autonomie, sqlalchemy

[handlers]
keys = console, file

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, file

[logger_autonomie]
level = DEBUG
handlers = console, file
qualname = autonomie

[logger_sqlalchemy]
level = DEBUG
handlers = console, file
qualname = sqlalchemy.engine
# level = INFO logs SQL queries.
# level = DEBUG logs SQL queries and results.
# level = WARN logs neither. (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_file]
class = FileHandler
args = ('%(here)s/logfile.log','a')
level = DEBUG
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
