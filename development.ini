[app:autonomie]
use = egg:autonomie

pyramid.reload_templates = true
pyramid.reload_assets = true
pyramid.reload_all = true
pyramid.debug_authorization = true
pyramid.debug_notfound = true
pyramid.debug_routematch = true
pyramid.debug_templates = true
pyramid.default_locale_name = fr
pyramid.includes =   pyramid_tm
                    deform_bootstrap

sqlalchemy.url = mysql://egw:egw@localhost/egw?charset=utf8
sqlalchemy.echo=False
sqlalchemy.encoding=UTF8
mako.directories = autonomie:templates
mako.imports = from markupsafe import escape_silent
mako.default_filters = escape_silent
mako.module_directory = %(here)s/mako_compiled_templates
session.type=file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.cookie_on_exception = true
session.auto=True
session.secret=Okd962SudK3od45kejytgaucbrh499E3939

[pipeline:main]
pipeline =
    autonomie



[server:main]
use = egg:waitress#main
host = 127.0.0.1
port = 8080

# Begin logging configuration
[loggers]
keys = root, autonomie, sqlalchemy

[handlers]
keys = console, file

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, file

[logger_autonomie]
level = DEBUG
handlers = console, file
qualname = autonomie

[logger_sqlalchemy]
level = WARN
handlers = console, file
qualname = sqlalchemy.engine
# level = INFO logs SQL queries.
# level = DEBUG logs SQL queries and results.
# level = WARN logs neither. (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_file]
class = FileHandler
args = ('%(here)s/logfile.log','a')
level = DEBUG
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
